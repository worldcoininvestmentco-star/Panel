<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>LuckyTechHub Stats | Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body class="bg-light">
  <!-- Navbar -->
  <nav class="navbar navbar-dark bg-dark">
    <div class="container-fluid">
      <span class="navbar-brand mb-0 h1">üìä LuckyTechHub Dashboard</span>
      <a href="/logout" class="btn btn-outline-light btn-sm">Logout</a>
    </div>
  </nav>

  <div class="container my-4">
    <!-- Stats cards -->
    <div class="row text-center mb-4">
      <div class="col-md-3 mb-3">
        <div class="card shadow-sm">
          <div class="card-body">
            <h5>Private Chats</h5>
            <h3 id="stat-privateChats">0</h3>
          </div>
        </div>
      </div>
      <div class="col-md-3 mb-3">
        <div class="card shadow-sm">
          <div class="card-body">
            <h5>Groups</h5>
            <h3 id="stat-groups">0</h3>
          </div>
        </div>
      </div>
      <div class="col-md-3 mb-3">
        <div class="card shadow-sm">
          <div class="card-body">
            <h5>Users</h5>
            <h3 id="stat-users">0</h3>
          </div>
        </div>
      </div>
      <div class="col-md-3 mb-3">
        <div class="card shadow-sm">
          <div class="card-body">
            <h5>Commands Executed</h5>
            <h3 id="stat-commandsExecuted">0</h3>
          </div>
        </div>
      </div>
    </div>

    <!-- Uptime -->
    <div class="alert alert-info text-center">
      ‚è± Uptime: <span id="stat-uptime">0s</span>
    </div>

    <!-- Chart -->
    <div class="card shadow-sm">
      <div class="card-body">
        <canvas id="statsChart" height="100"></canvas>
      </div>
    </div>
  </div>

  <script>
    const ctx = document.getElementById('statsChart').getContext('2d');
    const chart = new Chart(ctx, {
      type: 'line',
      data: {
        labels: [],
        datasets: [{
          label: 'Commands Executed',
          data: [],
          borderColor: '#007bff',
          backgroundColor: 'rgba(0,123,255,0.2)',
          fill: true
        }]
      },
      options: { responsive: true }
    });

    function formatUptime(ms) {
      let sec = Math.floor(ms / 1000);
      let h = Math.floor(sec / 3600);
      let m = Math.floor((sec % 3600) / 60);
      let s = sec % 60;
      return `${h}h ${m}m ${s}s`;
    }

    async function loadStats() {
      try {
        const res = await fetch('/api/stats');
        const json = await res.json();
        if (!json.ok) return;
        const s = json.stats;
        document.getElementById('stat-privateChats').textContent = s.privateChats;
        document.getElementById('stat-groups').textContent = s.groups;
        document.getElementById('stat-users').textContent = s.users;
        document.getElementById('stat-commandsExecuted').textContent = s.commandsExecuted;
        document.getElementById('stat-uptime').textContent = formatUptime(s.uptime);

        // Update chart
        chart.data.labels.push(new Date().toLocaleTimeString());
        chart.data.datasets[0].data.push(s.commandsExecuted);
        if (chart.data.labels.length > 10) {
          chart.data.labels.shift();
          chart.data.datasets[0].data.shift();
        }
        chart.update();
      } catch (e) {
        console.error(e);
      }
    }

    setInterval(loadStats, 5000);
    loadStats();
  </script>
</body>
</html>
